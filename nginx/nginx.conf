worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Define upstream services
    upstream customer-service {
        server customer-service:3005;
    }
    upstream product-service {
        server product-service:3002;
    }
    upstream order-service {
        server order-service:3003;
    }
    upstream payment-service {
        server payment-service:3004;
    }

    # Cache configuration for product service
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=product_cache:10m max_size=100m inactive=60m use_temp_path=off;

    server {
        listen 8080;

        # Route requests to Customer Service
        location /api/customers/ {
            proxy_pass http://customer-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Swagger-Base-Path /api/customers;
            
        }

        # Route requests to Product Service with caching
        location /api/products/ {
            proxy_cache product_cache;
            proxy_cache_valid 200 10m; # Cache successful responses for 10 minutes
            proxy_pass http://product-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Swagger-Base-Path /api/customers;
        }

        # Route requests to Order Service
        location /api/orders/ {
            proxy_pass http://order-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Swagger-Base-Path /api/orders;

        }

        # Route requests to Payment Service
        location /api/payments/ {
            proxy_pass http://payment-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Swagger-Base-Path /api/payments;

        }

        # Route documentation requests to Customer Service
        location /docs/customers/ {
            proxy_pass http://customer-service/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Swagger-Base-Path /api/customers;

        }

        # Route documentation requests to Product Service
        location /docs/products/ {
            proxy_pass http://product-service/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Swagger-Base-Path /api/products;
        }

        # Route documentation requests to Order Service
        location /docs/orders/ {
            proxy_pass http://order-service/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Swagger-Base-Path /api/orders;
        }

        # Route documentation requests to Payment Service
        location /docs/payments/ {
            proxy_pass http://payment-service/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Swagger-Base-Path /api/payments;

        }

        # Unified documentation landing page
        location = /docs {
            return 200 "Youverify E-commerce Microservices Documentation\n\nAvailable endpoints:\n- /docs/customers\n- /docs/products\n- /docs/orders\n- /docs/payments";
            add_header Content-Type text/plain;
        }
        
        # Health check endpoint for Nginx
        location /health {
            return 200 "Nginx API Gateway is running";
            add_header Content-Type text/plain;
        }
    }
}